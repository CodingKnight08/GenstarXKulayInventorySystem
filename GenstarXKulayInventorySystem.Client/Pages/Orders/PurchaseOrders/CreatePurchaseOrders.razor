@using GenstarXKulayInventorySystem.Client.Pages.Orders.PurchaseOrderItems
@using static GenstarXKulayInventorySystem.Shared.Helpers.OrdersHelper
@if(IsLoading){
    <MudDialog>
        <DialogContent>
            <MudCard Elevation="0" Class="bg-transparent w-100 h-100 d-flex flex-column align-items-center justify-content-center gap-1">
                <MudProgressCircular Color="Color.Info" Indeterminate="true" Size="Size.Medium">
                    <ChildContent>
                        <MudText Align="Align.Center">Loading</MudText>
                    </ChildContent>
                </MudProgressCircular>
            </MudCard> 
        </DialogContent>
    </MudDialog>
}
else
{
    <MudDialog Class="p-3" >
        <DialogContent>
          <MudForm @ref="_form" >
              <MudGrid Spacing="3" >
                  <MudItem xl="4">


                        <MudAutocomplete
                            Label="Supplier Name"
                            T="string"
                            CoerceText=true
                            CoerceValue="true" 
                            Value="SupplierName"
                            SearchFunc="SearchSupplier"
                            ValueChanged="@(async (string value) => await OnSupplierChanged(value))"
                            Required=true
                            />
                       
                  </MudItem>
                  
                    <MudItem xl="1" Class="d-flex align-items-end justify-content-start">
                        @if (IsNewSupplier)
                        {
                        <MudButton Variant="Variant.Filled" Size="Size.Small" Color="Color.Success" StartIcon="@Icons.Material.Filled.AddCircle" OnClick="ConfirmAddSupplier">Add</MudButton>

                        }
                  </MudItem>
                  <MudItem xl="1">
                        <MudSelect T="PurchaseRecieptOption"
                                   Label="Receipt Type"
                                   @bind-Value="NewPurchaseOrder.PurchaseRecieptOption">
                            @foreach (var val in Enum.GetValues<PurchaseRecieptOption>())
                            {
                                <MudSelectItem Value="@val">@val.ToString()</MudSelectItem>
                            }
                        </MudSelect>
                  </MudItem>
                  <MudItem xl="2">
                        <MudSelect T="PurchaseRecieveOption"
                                   Label="Receive Option"
                                   @bind-Value="NewPurchaseOrder.PurchaseRecieveOption">
                            @foreach (var val in Enum.GetValues<PurchaseRecieveOption>())
                            {
                                <MudSelectItem Value="@val">@val.ToString()</MudSelectItem>
                            }
                        </MudSelect>
                  </MudItem>
                  <MudItem xl="2">
                        <MudSelect T="PurchaseShipToOption"
                                   Label="Ship To"
                                   @bind-Value="NewPurchaseOrder.PurchaseShipToOption">
                            @foreach (var val in Enum.GetValues<PurchaseShipToOption>())
                            {
                                <MudSelectItem Value="@val">@val.ToString()</MudSelectItem>
                            }
                        </MudSelect>
                  </MudItem>
                  <MudItem xl="2">
                        <MudTextField Label="PO No." @bind-Value="NewPurchaseOrder.PurchaseOrderNumber" Disabled=true Placeholder="Auto Generated"/>
                  </MudItem>
                  <MudItem xl="1">
                       <MudDatePicker 
                               Label="Date Ordered" 
                               MinDate="MinDate"
                               DateChanged="@(newDate => OnDateChanged(newDate))"
                               Date="NewPurchaseOrder.PurchaseOrderDate" />
                  </MudItem>    
                   <MudItem xl="1">
                        <MudDatePicker Label="Date to Recieve" MinDate="NewPurchaseOrder.PurchaseOrderDate" Date="NewPurchaseOrder.ExpectedDeliveryDate" DateChanged="@(newDate => OnExpectedDateChanged(newDate))"/>
                  </MudItem>  
                  <MudItem xl="4">
                      <MudTextField Label="Remarks" @bind-Value="NewPurchaseOrder.Remarks" />
                  </MudItem>
              </MudGrid>
              
             
              <MudCard Class="w-100 mt-4" Elevation="0">
                  <GetAllToBeAddedPurchaseOrderItems @ref="PurchaseOrderItemComponent" OnPurchaseOrderItemsChanged="HandlePurchaseOrderItemsChanged" Branch="NewPurchaseOrder.PurchaseShipToOption" />
              </MudCard>

          </MudForm>
              
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Cancel">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" OnClick=Submit StartIcon="@Icons.Material.Filled.Save" Disabled="!IsPurchaseOrderValid">Submit</MudButton>
        </DialogActions>
    </MudDialog>
}