@using GenstarXKulayInventorySystem.Client.Pages.Sales.SaleItems.PaintIncluded
@using static GenstarXKulayInventorySystem.Shared.Helpers.ProductsEnumHelpers
@using GenstarXKulayInventorySystem.Shared.DTOS;
<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xl="4">
                <MudAutocomplete 
                         Label="Select Brand"
                         Value="SelectedBrand?.BrandName"  
                         CoerceText="true"
                         CoerceValue="true"
                         Placeholder="Select Brand"
                         SearchFunc="SearchBrands"
                         ValueChanged="(string value) => OnBrandSelect(value)"
                         Variant="Variant.Text"
                         Disabled="SaleItemDto.PaintCategory == PaintCategory.Mix"
                         />
            </MudItem>
            <MudItem xl="5">

                <MudAutocomplete T="ProductDto"
                                 Label="Item Name"
                                 SearchFunc="SearchProductsDto"
                                 ToStringFunc="p => p?.ProductNameAndUnit"
                                 ValueChanged="OnProductSelectDto"
                                 TextChanged="OnProductTyped"
                                 Text="@SelectedProduct"
                                 Clearable="true"
                                 Dense="true"
                                 CoerceText="false"
                                 CoerceValue="false"
                                 ResetValueOnEmptyText="false" />




            </MudItem>

            <MudItem xl="3">
                <MudSelect T="PaintCategory" @bind-Value="SaleItemDto.PaintCategory" Label="Paint Type">
                    @foreach(var type in Enum.GetValues(typeof(PaintCategory)).Cast<PaintCategory>())
                    {
                        <MudSelectItem T="PaintCategory" Value="@type">
                            @type.ToString()
                        </MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xl="3">
                <MudNumericField T="decimal?" @bind-Value="SaleItemDto.Size"  Placeholder="Item Size eg. 1.5" Label="Item Size" HideSpinButtons="true" Variant="Variant.Text" Required=true/>
            </MudItem>
            <MudItem xl="3">
                <MudSelect T="ProductMesurementOption" @bind-Value="SaleItemDto.UnitMeasurement" Label="Unit">
                    @foreach(var unit in Enum.GetValues(typeof(ProductMesurementOption)).Cast<ProductMesurementOption>())
                    {
                        <MudSelectItem T="ProductMesurementOption" Value="@unit">
                            @unit.ToString()
                        </MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xl="3">
                <MudNumericField T="int" @bind-Value="SaleItemDto.Quantity" Label="Quantity" Placeholder="Enter Quantity" HideSpinButtons=true /> 
            </MudItem>
            @if (ShouldShowSaleType())
{
            <MudItem xl="3">
                <MudCheckBox  T="bool" @bind-Checked="IsWholeSale" Label="Wholesale Price?" Size="Size.Small" ValueChanged="OnWholeSaleChanged" />
            </MudItem>
}
            <MudItem xl="3">
                <MudNumericField T="decimal" @bind-Value="SaleItemDto.ItemPrice" Adornment="Adornment.Start" AdornmentText="₱" HideSpinButtons="true" Label="Price per Item" />
            </MudItem>
            <MudItem xl="12">
                <MudTextField @bind-Value="SaleItemDto.Description" MaxLines="2" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Info" Label="Description" />
            </MudItem>
            @if (SaleItemDto.PaintCategory == PaintCategory.Mix)
            {
                <MudItem xl="12" Class="d-flex flex-row justify-content-end">
                    <MudButton Variant="Variant.Filled" Color="Color.Info" DropShadow="true" StartIcon="@Icons.Material.Filled.AddCircle" OnClick="AddPaintIncluded">Add Material</MudButton>
                </MudItem>
                <MudItem xl="12">
                    <GetAllPaintsIncluded PaintItems="Paints"/>
            </MudItem>
            }
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Save" OnClick="SaveItem" Disabled="!IsValid">Add</MudButton>
    </DialogActions>
</MudDialog>