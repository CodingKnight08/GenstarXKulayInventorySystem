@using GenstarXKulayInventorySystem.Client.Pages.Sales.SaleItems
@using static GenstarXKulayInventorySystem.Shared.Helpers.BillingHelper
@using static GenstarXKulayInventorySystem.Shared.Helpers.ProductsEnumHelpers
@using static GenstarXKulayInventorySystem.Shared.Helpers.OrdersHelper
@using static GenstarXKulayInventorySystem.Shared.Helpers.UtilitiesHelper
@page "/sales/create"
<MudMainContent Class="w-auto h-100 d-flex flex-column">

    <MudPaper Elevation="0" Class="mx-3 h-100 mt-5 d-flex flex-column justify-content-between">

        <!-- Main content fills available space -->
        <MudGrid>
            <MudItem xl="4">
               <MudAutocomplete
                   T="string"
                   Label="Client Name"
                   @bind-Value="Client"
                   SearchFunc="SearchClients"
                   Dense="true"
                   Clearable="true"
                   CoerceText="true"
                   CoerceValue="true"
                   Placeholder="Enter Client name"
                   Variant="Variant.Text"
                   Required=true
                   ShowProgressIndicator="IsClientLoading"
                   TextChanged="OnClientNameTyped"
                   />
            </MudItem>
            <MudItem xl="2">
                <MudSelect T="PaymentMethod?" @bind-Value="Sale.PaymentType" Label="Payment Method" Placeholder="Select PaymentMethod">
                    @foreach (var method in Enum.GetValues(typeof(PaymentMethod)).Cast<PaymentMethod>())
                    {
                        <MudSelectItem T="PaymentMethod?" Value="@method">
                            @method.ToString()
                        </MudSelectItem>
                    }
                    <MudSelectItem T="PaymentMethod?" Value="null">N/A</MudSelectItem>
                </MudSelect>
            </MudItem>
            <MudItem xl="2">
                <MudSelect T="PurchaseRecieptOption?" @bind-Value="Sale.SalesOption" Label="Receipt Type" Placeholder="--Select Receipt Type--">
                    @foreach (var option in Enum.GetValues(typeof(PurchaseRecieptOption)).Cast<PurchaseRecieptOption>())
                    {
                        <MudSelectItem T="PurchaseRecieptOption?" Value="@option">
                            @(option == PurchaseRecieptOption.BIR ? "Invoice" : "Non-Voice")
                        </MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xl="2">
                <MudTextField T="string" Placeholder="Auto Generated" Label="Sale Number" Disabled=true />
            </MudItem>
            <MudItem xl="2">
                <MudSelect T="BranchOption"
                           Value="Sale.Branch"
                           ValueChanged="OnBranchChanged"
                           Label="Branch"
                           ReadOnly=true>
                                         
                    @foreach (var branch in Enum.GetValues(typeof(BranchOption)).Cast<BranchOption>())
                    {
                        <MudSelectItem T="BranchOption" Value="@branch">
                            @branch.ToString()
                        </MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
          
                <MudItem xl="3">
                    <MudTextField @bind-Value="Sale.RecieptReference"
                                  T="string"
                                  Placeholder="Enter Receipt No."
                                  Label="Receipt No."
                                  />
                </MudItem>
            

            @if(Sale.PaymentType == null)
            {
                
            
            <MudItem xl="3">
                <MudSelect T="PaymentTermsOption?" @bind-Value="Sale.PaymentTermsOption" Label="Payment Term Option" Placeholder="--Select Term Option--">
                    @foreach(var option in Enum.GetValues(typeof(PaymentTermsOption)).Cast<PaymentTermsOption>())
                    {
                        <MudSelectItem T="PaymentTermsOption?" Value="@option" Disabled="option == PaymentTermsOption.Today">
                            @option.ToString()
                        </MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            }
            @if(Sale.PaymentTermsOption == PaymentTermsOption.Custom)
            {
                <MudItem xl="3">
                    <MudNumericField T="int?" @bind-Value="Sale.CustomPaymentTermsOption" HideSpinButtons=true Placeholder="Number of days to be paid" Label="Custom Payment Term" Adornment="Adornment.End" AdornmentText="day's" />
                </MudItem>
            }

            <MudItem xl="12">
                <GetAllSaleItemsToBeAdded OnSaleItemsChanged="HandleSaleItemsChanged" Branch="Sale.Branch" />
            </MudItem>
        </MudGrid>

        <!-- Footer buttons pinned to bottom -->
        <MudCard Elevation="0" Class="w-100 d-flex flex-row align-items-center justify-content-end gap-3 mt-3 mb-4">
            <MudButton Variant="Variant.Filled"
                       Color="Color.Default"
                       OnClick="Cancel">
                Cancel
            </MudButton>

            <MudButton Variant="Variant.Filled"
                       Color="Color.Success"
                       StartIcon="@Icons.Material.Filled.Save"
                       OnClick="CreateSaleAsync"
                       Disabled="!IsValid">
                Save
            </MudButton>
        </MudCard>
    </MudPaper>

</MudMainContent>


