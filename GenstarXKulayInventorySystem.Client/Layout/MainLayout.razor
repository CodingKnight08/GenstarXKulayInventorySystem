@using Microsoft.AspNetCore.Authorization
@using MudBlazor
@using System.IdentityModel.Tokens.Jwt;
@using Blazored.LocalStorage;
@using static GenstarXKulayInventorySystem.Shared.Helpers.ProductsEnumHelpers
@inherits LayoutComponentBase
@attribute [Authorize]
<MudThemeProvider Theme="@MyCustomTheme"/>
<MudPopoverProvider />


<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout >
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        Inventory System
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu Branch="userBranch.GetValueOrDefault()" />
    </MudDrawer>
    <div class="w-100 vh-100">
        @Body

    </div>
        
    
</MudLayout>
@code {
    bool _drawerOpen = true;

    private BranchOption? userBranch;
    [Inject] UserState UserState { get; set; } = default!;
    [Inject] ILocalStorageService LocalStorage { get; set; } = default!;
    [Inject] NavigationManager NavigationManager { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var token = await LocalStorage.GetItemAsync<string>("authToken");

        if (!string.IsNullOrWhiteSpace(token))
        {
            var handler = new JwtSecurityTokenHandler();
            var jwt = handler.ReadJwtToken(token);

            var branchClaim = jwt.Claims.FirstOrDefault(c => c.Type == "Branch")?.Value;
            if (Enum.TryParse<BranchOption>(branchClaim, out var branch))
            {
                userBranch = branch;
                UserState.SetBranch(branch);
            }

            // Optional: redirect if logged in
            if (NavigationManager.Uri.EndsWith("/"))
                NavigationManager.NavigateTo("/dashboard", forceLoad: true);
        }
    }
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    MudTheme MyCustomTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = Colors.Blue.Default,
            Secondary = Colors.Green.Accent4,
            AppbarBackground = Colors.Blue.Lighten2,
        },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.Blue.Lighten1
        },

        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "300px"
        }
    };
}