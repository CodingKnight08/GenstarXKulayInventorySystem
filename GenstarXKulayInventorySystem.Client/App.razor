@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (!context.User.Identity?.IsAuthenticated ?? true)
                    {
                        <!-- redirect anonymous users to "/" (login page) -->
                        Navigation.NavigateTo("/", forceLoad: true);
                    }
                    else
                    {
                        <LayoutView Layout="@typeof(MainLayout)">
                            <PageTitle>Access Denied</PageTitle>
                            <p>You are not authorized to access this page.</p>
                        </LayoutView>
                    }
                </NotAuthorized>
                <Authorizing>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <p>Authentication in progress...</p>
                    </LayoutView>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
